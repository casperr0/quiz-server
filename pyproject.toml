[tool.poetry]
name = "quiz-server"
version = "0.1.0"
description = ""
authors = ["RainrainWu <s0958334772@gmail.com>"]

[tool.poetry.dependencies]
python = "^3.8"
Django = "^3.1.5"
celery = "^5.0.5"
psycopg2-binary = "^2.8.6"
djangorestframework = "^3.12.2"
django-extensions = "^3.1.0"
python-dotenv = "^0.15.0"
pandas = "^1.2.1"
loguru = "^0.5.3"

[tool.poetry.dev-dependencies]
black = "^20.8b1"
commitizen = "^2.14.0"
pre-commit = "^2.9.3"
pytest-django = "^4.1.0"
invoke = "^1.5.0"
pytest-cov = "^2.11.1"
pytest-mock = "^3.5.1"
pytest-xdist = "^2.2.0"
isort = "^5.7.0"
pylint = "^2.6.0"
mypy = "^0.800"
flake8 = "^3.8.4"
bandit = "^1.7.0"
safety = "^1.10.3"
requests = "^2.25.1"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.black]
py38 = true
include = '\.pyi?$'
exclude = '''
/(
    \.git
| \.hg
| \.mypy_cache
| \.tox
| \.venv
| _build
| buck-out
| build
| dist

# The following are specific to Black, you probably don't want those.
| blib2to3
| tests/data
)/
'''

[tool.pytest.ini_options]
minversion = "6.0"
addopts = "-ra --strict-markers"
testpaths = "tests"
python_files = "tests.py test_*.py *_tests.py"
DJANGO_SETTINGS_MODULE = "quiz_server.settings"
norecursedirs = [
    ".*",
    "build",
    "dist",
    "CVS",
    "_darcs",
    "{arch}",
    "*.egg",
    "venv",
    "env",
    "virtualenv"
]

[tool.pylint]
    [tool.pylint.messages_control]
    disable = [
        "bad-continuation",
        "missing-function-docstring",
        "missing-module-docstring",
        "invalid-name"
    ]

    [tool.pylint.format]
    max-line-length = 88

[tool.coverage]
    [tool.coverage.report]
    show_missing = true
    exclude_lines = [
        # Have to re-enable the standard pragma
        'pragma: no cover',

        # Don't complain about missing debug-only code:
        'def __repr__',
        'if self\.debug',

        # Don't complain if tests don't hit defensive assertion code:
        'raise AssertionError',
        'raise NotImplementedError',

        # Don't complain if non-runnable code isn't run:
        'if 0:',
        'if __name__ == .__main__.:'
    ]
    omit = [
        'env/*',
        'venv/*',
        '*/virtualenv/*',
        '*/virtualenvs/*',
        '*/tests/*'
    ]

[tool.isort]
profile = "black"
